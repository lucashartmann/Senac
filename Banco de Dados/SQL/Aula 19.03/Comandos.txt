CREATE DATABASE aluno;
USE aluno;

CREATE TABLE aluno (
  num_matri int(11) NOT NULL,
  data_nasci date NOT NULL,
  rua varchar(100) DEFAULT NULL,
  bairro varchar(50) DEFAULT NULL,
  cep varchar(10) DEFAULT NULL,
  cidade varchar(50) DEFAULT NULL,
  genero char(1) DEFAULT NULL,
  nome varchar(100) NOT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO aluno (num_matri, data_nasci, rua, bairro, cep, cidade, genero, nome) VALUES
(10001, '2000-06-15', 'Rua dos Estudantes, 100', 'Centro', '01234-567', 'São Paulo', 'M', 'Rafael Mendes'),
(10002, '2001-04-22', 'Av. das Universidades, 200', 'Pinheiros', '02345-678', 'São Paulo', 'F', 'Juliana Costa'),
(10003, '1999-11-10', 'Rua Doutor Silva, 300', 'Saúde', '03456-789', 'São Paulo', 'M', 'Bruno Almeida'),
(10004, '2002-02-28', 'Av. Paulista, 400', 'Bela Vista', '04567-890', 'São Paulo', 'F', 'Carolina Souza'),
(10005, '2000-09-17', 'Rua da Tecnologia, 500', 'Vila Mariana', '05678-901', 'São Paulo', 'M', 'Daniel Ferreira');

CREATE TABLE cursos (
  id_cursos int(11) NOT NULL,
  nome varchar(100) NOT NULL,
  turno varchar(20) NOT NULL,
  area varchar(50) NOT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO cursos (id_cursos, nome, turno, area) VALUES
(1, 'Engenharia de Software', 'Manhã', 'Tecnologia'),
(2, 'Administração', 'Noite', 'Negócios'),
(3, 'Medicina', 'Integral', 'Saúde'),
(4, 'Direito', 'Noite', 'Humanas'),
(5, 'Ciência da Computação', 'Tarde', 'Tecnologia');

CREATE TABLE dependentes (
  nome varchar(100) NOT NULL,
  grau_parentesco varchar(50) DEFAULT NULL,
  cod_depe int(11) NOT NULL,
  data_nasc date DEFAULT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO dependentes (nome, grau_parentesco, cod_depe, data_nasc) VALUES
('Miguel Silva', 'Filho', 501, '2015-03-12'),
('Beatriz Oliveira', 'Filha', 502, '2017-07-25'),
('Lucas Santos', 'Filho', 503, '2010-11-30'),
('Sophia Pereira', 'Filha', 504, '2016-05-18'),
('Pedro Lima', 'Filho', 505, '2014-09-22');

CREATE TABLE disciplina (
  cod_disc int(11) NOT NULL,
  descricao varchar(200) NOT NULL,
  codigo_sala int(11) NOT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO disciplina (cod_disc, descricao, codigo_sala) VALUES
(2001, 'Programação Orientada a Objetos', 101),
(2002, 'Gestão Empresarial', 102),
(2003, 'Anatomia Humana', 103),
(2004, 'Direito Constitucional', 104),
(2005, 'Estrutura de Dados', 105);

CREATE TABLE docente (
  cod_doce int(11) NOT NULL,
  endereco varchar(200) NOT NULL,
  telefone bigint(11) NOT NULL,
  nome varchar(100) NOT NULL,
  codigo_dependente int(11) DEFAULT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO docente (cod_doce, endereco, telefone, nome, codigo_dependente) VALUES
(1001, 'Rua das Flores, 123 - Centro', 0, 'Ana Silva', 501),
(1002, 'Av. Principal, 456 - Jardins', 0, 'Carlos Oliveira', 501),
(1003, 'Rua do Comércio, 789 - Vila Nova', 0, 'Maria Santos', 501),
(1004, 'Av. Brasil, 321 - Centro', 0, 'João Pereira', 501),
(1005, 'Rua das Palmeiras, 654 - Parque Verde', 0, 'Fernanda Lima', 501);

CREATE TABLE matricula (
  id int(11) NOT NULL,
  data_matri date NOT NULL,
  numero_matricula int(11) NOT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO matricula (id, data_matri, numero_matricula) VALUES
(1, '2022-02-10', 10001),
(2, '2022-02-11', 10002),
(3, '2022-02-09', 10003),
(4, '2022-02-12', 10004),
(5, '2022-02-08', 10005);

CREATE TABLE sala (
  cod_sala int(11) NOT NULL,
  nome varchar(50) NOT NULL,
  localizacao varchar(100) NOT NULL
) ENGINE=INNODB DEFAULT CHARSET=UTF8; 

INSERT INTO sala (cod_sala, nome, localizacao) VALUES
(101, 'Laboratório de Informática', 'Bloco A - Térreo'),
(102, 'Sala de Aula 1', 'Bloco B - 1º Andar'),
(103, 'Auditório', 'Bloco C - Térreo'),
(104, 'Laboratório de Anatomia', 'Bloco D - 2º Andar'),
(105, 'Sala de Estudos', 'Biblioteca - 3º Andar');

ALTER TABLE disciplina
  ADD codigo_sala int NOT NULL,
     FOREIGN KEY (codigo_sala) REFERENCES sala (cod_sala);

ALTER TABLE docente
  ADD codigo_dependente int NULL,
     FOREIGN KEY (codigo_dependente) REFERENCES dependentes (cod_depe);

ALTER TABLE matricula
  ADD numero_matricula int NOT NULL,
      FOREIGN KEY (numero_matricula) REFERENCES aluno (num_matri);